name: Docker CI/CD script

on:
  push:
    branches:
      - main
      - demo

  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
          - info
          - warning
          - debug
env:
  DOCKER_REPO_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/camstudy-web:latest

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Create .env file
        run: |
          touch .env
          echo '${{ secrets.ENV }}' >> .env
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push image
        id: build-image
        run: |
          docker build --build-arg PORT=${{ secrets.PORT }} -t ${{ env.DOCKER_REPO_NAME }} .
          docker push ${{ env.DOCKER_REPO_NAME }}
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.AWS_SSH_IP_ADDRESS }}
          username: ${{ secrets.AWS_SSH_USERNAME }}
          key: ${{ secrets.AWS_SSH_KEY }}
          debug: true
          port: 22
          script: |
            sudo docker login
            sudo docker pull ${{ env.DOCKER_REPO_NAME }}
            sudo docker stop camstudy_web
            sudo docker rm camstudy_web
            sudo docker run -d --name camstudy_web \
              -p ${{ secrets.PORT }}:${{ secrets.PORT }} \
              ${{ env.DOCKER_REPO_NAME }}
            sudo docker image prune -a -f
            echo "success";
